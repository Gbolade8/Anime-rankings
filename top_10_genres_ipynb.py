# -*- coding: utf-8 -*-
"""Top 10 Genres. ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12t-KCE117XgB2-Zf6XGh7-he_QPlOuYk
"""

!pip install kaggle kagglehub
import kagglehub
import zipfile
import pandas as pd
import os
from google.colab import files

print("Please upload your kaggle.json file.")
files.upload()

!mkdir -p ~/.kaggle
!cp kaggle.json ~/.kaggle/
!chmod 600 ~/.kaggle/kaggle.json

dataset_name = "marlesson/myanimelist-dataset-animes-profiles-reviews"
zip_file = "myanimelist-dataset-animes-profiles-reviews.zip"

if not os.path.exists(zip_file):
    print(f"Downloading {dataset_name}...")
    !kaggle datasets download -d {dataset_name}
else:
    print(f"{zip_file} already exists. Skipping download.")

if not os.path.exists('animes.csv'):
    print("Unzipping the dataset...")
    with zipfile.ZipFile(zip_file, 'r') as zip_ref:
        zip_ref.extractall('/content')
else:
    print("Dataset already unzipped.")

print("Files in the current directory:")
print(os.listdir('/content'))

csv_file = '/content/animes.csv'
if os.path.exists(csv_file):
    anime_data = pd.read_csv(csv_file)
    print("First 5 rows of the dataset:")
    print(anime_data.head())

    print("\nColumns in the dataset:")
    print(anime_data.columns)

if 'score' in anime_data.columns and 'genre' in anime_data.columns:
    anime_data['genre'] = anime_data['genre'].str.split(', ')
    exploded_genres = anime_data.explode('genre')
    genre_scores = exploded_genres.groupby('genre')['score'].mean().reset_index()
    top_genres = genre_scores.sort_values(by='score', ascending=False).head(10)

    print("\nTop 10 genres based on average score:")
    print(top_genres)
else:
    print("The required columns 'score' and/or 'genre' are missing in the dataset.")

import pandas as pd
import matplotlib.pyplot as plt

# Assuming anime_data is already loaded
csv_file = '/content/animes.csv'
anime_data = pd.read_csv(csv_file)

print("Columns in the dataset:")
print(anime_data.columns)

if 'score' in anime_data.columns and 'genre' in anime_data.columns:
    anime_data['genre'] = anime_data['genre'].str.split(', ')
    exploded_genres = anime_data.explode('genre')
    genre_scores = exploded_genres.groupby('genre')['score'].mean().reset_index()
    top_genres = genre_scores.sort_values(by='score', ascending=False).head(10)

    print("\nTop 10 genres based on average score:")
    print(top_genres)

    plt.figure(figsize=(12, 6))
    plt.barh(top_genres['genre'], top_genres['score'], color='skyblue')
    plt.xlabel('Average Score')
    plt.title('Top 10 Genres Based on Average Score')
    plt.gca().invert_yaxis()  # Invert y axis to have the highest score on top
    plt.show()
else:
    print("The required columns 'score' and/or 'genre' are missing in the dataset.")